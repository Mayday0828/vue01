{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/ValidCode.vue';\nexport default {\n  name: 'RegistView',\n  components: {\n    ValidCode\n  },\n  data() {\n    const validateCode = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value.toLowerCase() !== this.code) {\n        callback(new Error('验证码错误'));\n      } else {\n        callback();\n      }\n    };\n    // 验证码校验\n    return {\n      code: '',\n      // 验证码组件传过来的code\n      user: {\n        code: '',\n        // 表单输入的验证码\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          validator: validateCode,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    getCode(code) {\n      this.code = code.toLowerCase();\n    },\n    login() {\n      this.$refs['loginRef'].validate(valid => {\n        if (valid) {\n          // 验证通过,valid是布尔值\n          this.$request.post('/login', this.user).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/index');\n              this.$message.success('登录成功');\n              let LocalStorage;\n              LocalStorage.setItem(\"honey-user\", JSON.stringify(res.data)); // 存储用户数据\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","name","components","data","validateCode","rule","value","callback","Error","toLowerCase","code","user","username","password","rules","required","message","trigger","validator","created","methods","getCode","login","$refs","validate","valid","$request","post","then","res","$router","push","$message","success","LocalStorage","setItem","JSON","stringify","error","msg"],"sources":["src/views/RegisterView.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100vh;display: flex; align-items: center;justify-content: center;background-color: cornflowerblue\">\r\n    <div style=\"display: flex; background-color: white; width: 50%; border-radius: 5px; overflow: hidden\">\r\n      <div style=\"flex: 1;\">\r\n        <img src=\"../assets/img.png\" alt=\"\" style=\"width:100%;height: 100%\">\r\n      </div>\r\n      <div style=\"flex: 1;display: flex; align-items: center;justify-content: center\">\r\n        <el-form :model=\"user\" style=\"width: 80%\" :rules=\"rules\" ref=\"loginRef\">\r\n          <div style=\"font-size: 20px;font-weight: bold;text-align: center; margin-bottom: 20px\">欢迎注册</div>\r\n          <el-form-item prop=\"username\">\r\n            <el-input  prefix-icon=\"el-icon-user\" size=\"medium\" placeholder=\"请输入账号：\" v-model=\"user.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\">\r\n            <el-input prefix-icon=\"el-icon-lock\" size=\"medium\" show-password placeholder=\"请输入密码：\" v-model=\"user.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"code\">\r\n            <div style=\"display: flex\">\r\n              <el-input placeholder=\"请输入验证码：\" prefix-icon=\"el-icon-circle-check\" size=\"medium\" style=\"flex: 1\" v-model=\"user.code\"></el-input>\r\n              <div style=\"flex: 1;height: 40px\">\r\n                <valid-code @input=\"getCode\"/>\r\n              </div>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" style=\"width: 100%\" @click=\"login\">登录</el-button>\r\n          </el-form-item>\r\n          <div style=\"display: flex\">\r\n            <div style=\"flex: 1\">还没有账号？请<span style=\"color: blue; cursor: pointer\" @click=\"$router,push('/register')\">注册</span></div>\r\n            <div style=\" text-align: right\"><span style=\"color: blue; cursor: pointer\">忘记密码</span></div>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ValidCode from '@/components/ValidCode.vue'\r\n\r\nexport default {\r\n  name: 'RegistView',\r\n  components: {\r\n    ValidCode\r\n  },\r\n  data () {\r\n    const validateCode = (rule, value, callback) => {\r\n      if(value === '') {\r\n        callback(new Error('请输入验证码'));\r\n      } else if (value.toLowerCase() !== this.code ) {\r\n        callback(new Error('验证码错误'));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    // 验证码校验\r\n    return {\r\n      code: '', // 验证码组件传过来的code\r\n      user: {\r\n        code: '', // 表单输入的验证码\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n        code: [\r\n          { validator: validateCode, trigger: 'blur' }\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n  },\r\n  methods: {\r\n    getCode(code) {\r\n      this.code = code.toLowerCase()\r\n    },\r\n    login() {\r\n      this.$refs['loginRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过,valid是布尔值\r\n          this.$request.post('/login', this.user).then(res => {\r\n            if (res.code === '200') {\r\n              this.$router.push('/index')\r\n              this.$message.success('登录成功')\r\n              let LocalStorage;\r\n              LocalStorage.setItem(\"honey-user\",JSON.stringify(res.data)) // 存储用户数据\r\n            }else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAoCA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA,MAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,CAAAG,WAAA,YAAAC,IAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;IACA;MACAG,IAAA;MAAA;MACAC,IAAA;QACAD,IAAA;QAAA;QACAE,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,IAAA,GACA;UAAAQ,SAAA,EAAAd,YAAA;UAAAa,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA,GACA;EACAC,OAAA;IACAC,QAAAX,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA,CAAAD,WAAA;IACA;IACAa,MAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAhB,IAAA,EAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAnB,IAAA;cACA,KAAAoB,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,IAAAC,YAAA;cACAA,YAAA,CAAAC,OAAA,eAAAC,IAAA,CAAAC,SAAA,CAAAR,GAAA,CAAA1B,IAAA;YACA;cACA,KAAA6B,QAAA,CAAAM,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}